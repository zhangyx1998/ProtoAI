import type { Packet, UserHint } from "core";

// used for populating temporary data until we get real data
function hexToArrayBuffer(hexArray: string[]): ArrayBuffer {
  const buffer = new ArrayBuffer(hexArray.length);
  const view = new Uint8Array(buffer);
  hexArray.forEach((hex, i) => {
    view[i] = Number(hex);
  });
  return buffer;
}

export function getPlaceholderData(): Array<Packet | UserHint> {
    return [
        {
          type: "DATA-UP",
          timestamp: 1n,
          payload: hexToArrayBuffer(["0xa1", "0x02", "0x03", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04"])
        },
        {
          type: "USER-HINT",
          timestamp: 2n,
          payload: "Woah guys this is a message"
        },
        {
          type: "DATA-DOWN",
          timestamp: 3n,
          payload: hexToArrayBuffer(["0x44", "0x52", "0x4f", "0x4e", "0x45", "0x20", "0x54", "0x45", "0x53", "0x54", "0x49", "0x4e", "0x47", "0x20", "0x46", "0x4c", "0x49", "0x47", "0x48", "0x54", "0x75", "0x77", "0x68", "0x64", "0x71", "0x75", "0x6f", "0x70", "0x6e", "0x77", "0x70", "0x75", "0x64", "0x55", "0x41", "0x53", "0x77", "0x71", "0x75", "0x6e", "0x64", "0x75", "0x71", "0x77", "0x75", "0x75", "0x55", "0x4e", "0x45", "0x52", "0x53", "0x54", "0x41", "0x4e", "0x44", "0x20", "0x4d", "0x45", "0x3f", "0x3f", "0x3f", "0x32", "0x33", "0x31", "0x31", "0x32", "0x33"])
        },
        {
          type: "DATA-UP",
          timestamp: 4n,
          payload: hexToArrayBuffer(["0xa1", "0x02", "0x03", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04"])
        },
        {
          type: "USER-HINT",
          timestamp: 5n,
          payload: "Woah guys this is a message"
        },
        {
          type: "DATA-DOWN",
          timestamp: 6n,
          payload: hexToArrayBuffer(["0x44", "0x52", "0x4f", "0x4e", "0x45", "0x20", "0x54", "0x45", "0x53", "0x54", "0x49", "0x4e", "0x47", "0x20", "0x46", "0x4c", "0x49", "0x47", "0x48", "0x54", "0x75", "0x77", "0x68", "0x64", "0x71", "0x75", "0x6f", "0x70", "0x6e", "0x77", "0x70", "0x75", "0x64", "0x55", "0x41", "0x53", "0x77", "0x71", "0x75", "0x6e", "0x64", "0x75", "0x71", "0x77", "0x75", "0x75", "0x55", "0x4e", "0x45", "0x52", "0x53", "0x54", "0x41", "0x4e", "0x44", "0x20", "0x4d", "0x45", "0x3f", "0x3f", "0x3f", "0x32", "0x33", "0x31", "0x31", "0x32", "0x33"])
        },
        {
          type: "DATA-UP",
          timestamp: 7n,
          payload: hexToArrayBuffer(["0xa1", "0x02", "0x03", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04", "0x04"])
        },
        {
          type: "USER-HINT",
          timestamp: 8n,
          payload: "Woah guys this is a message"
        },
        {
          type: "DATA-DOWN",
          timestamp: 9n,
          payload: hexToArrayBuffer(["0x44", "0x52", "0x4f", "0x4e", "0x45", "0x20", "0x54", "0x45", "0x53", "0x54", "0x49", "0x4e", "0x47", "0x20", "0x46", "0x4c", "0x49", "0x47", "0x48", "0x54", "0x75", "0x77", "0x68", "0x64", "0x71", "0x75", "0x6f", "0x70", "0x6e", "0x77", "0x70", "0x75", "0x64", "0x55", "0x41", "0x53", "0x77", "0x71", "0x75", "0x6e", "0x64", "0x75", "0x71", "0x77", "0x75", "0x75", "0x55", "0x4e", "0x45", "0x52", "0x53", "0x54", "0x41", "0x4e", "0x44", "0x20", "0x4d", "0x45", "0x3f", "0x3f", "0x3f", "0x32", "0x33", "0x31", "0x31", "0x32", "0x33"])
        },
    ]
}